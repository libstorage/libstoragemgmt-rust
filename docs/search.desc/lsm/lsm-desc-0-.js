searchState.loadedDescShard("lsm", 0, "<code>LibStorageMgmt</code>\nDefault user and group ID for anonymous access.\nAccess group is also known as host group on some storage …\nSupport <code>Client::access_group_create()</code> with …\nSupport <code>Client::access_group_create()</code> with …\nSupport <code>Client::access_group_delete()</code>.\nSupport <code>Client::access_group_init_add()</code> with …\nSupport <code>Client::access_group_init_add()</code> with …\nSupport <code>Client::access_group_init_del()</code>.\nSupport <code>Client::access_groups()</code>.\nAutomation/Drive Interface Transport. Often used by tape.\nSupport <code>Client::ags_granted_to_vol()</code>.\nIDE disk.\nPATA/IDE or SATA.\nStorage system will determine whether to use cache based on\nSupport <code>Client::batteries()</code>.\nRepresent a battery.\nRepresent a block range used …\nRepresent a volume cache policy.\nRepresent capabilities supported by specific system.\nRepresent a capability supported by specific system.\nSuper capacitor.\nChemical battery, e.g. Li-ion battery.\nRepresent the connection to plugin.\nPoint in time read writeable space efficient copy of data. …\nFull bitwise copy of the data (occupies full space).\nLet storage array to decide the volume provisioning type.\nCache is disabled.\nPool is created from disks.\nRepresent disk data link type.\nSupport <code>Client::disks()</code> with valid <code>link_type</code> property.\nSupport <code>Client::disks()</code> with valid <code>location</code> property.\nSupport <code>Client::disks()</code> with valid <code>rpm</code> property.\nRepresent disk type.\nSupport <code>Client::disks()</code> with valid <code>vpd83</code> property.\nSupport <code>Client::disks()</code>.\nThis pool could hold delta data for snapshots.\nThis pool could create file system.\nThis pool could allocate space for sub-pool.\nThis pool is reserved for system internal use.\nThis pool could create volume.\nThis pool could create fully allocated volume.\nThis pool could create thin provisioned volume.\nCache is enabled.\nFCoE port\nFC disk.\nFibre Channel.\nFC port\nSupport <code>Client::fs()</code>.\nSupport <code>Client::fs_child_dep_rm()</code>.\nSupport <code>Client::fs_child_dep_rm()</code> with <code>files</code> argument.\nSupport <code>Client::fs_clone()</code>.\nSupport <code>Client::fs_create()</code>.\nSupport <code>Client::fs_delete()</code>.\nSupport <code>Client::fs_export()</code>.\nSupport <code>Client::fs_export()</code> with <code>export_path</code> argument.\nSupport <code>Client::fs_file_clone()</code>.\nSupport <code>Client::fs_has_child_dep()</code>.\nSupport <code>Client::fs_resize()</code>.\nSupport <code>Client::fs_snapshot_create()</code>.\nSupport <code>Client::fs_snapshot_delete()</code>.\nSupport <code>Client::fs_snapshot_restore()</code>.\nSupport <code>Client::fs_snapshot_restore()</code> with <code>files</code> argument.\nSupport <code>Client::fs_snapshots()</code>.\nSupport <code>Client::fs_unexport()</code>.\nCreate fully allocated volume.\nThe storage system is a hardware RAID card(like HP …\nThe physical disks can be exposed to OS directly without …\nNormal HDD, fall back value if failed to detect HDD …\nHybrid disk uses a combination of HDD and SSD.\nInternet Small Computer System Interface\niSCSI port\nSupport <code>Client::iscsi_chap_auth_set()</code>.\niSCSI IQN\nJust bunch of disks, no parity, no striping.\nRemote LUN from SAN array.\nI/O will be blocked until I/O reached source storage …\nI/O will be blocked until I/O reached both source and …\nThis volume contains multiple RAID settings.\nThis access group contains more than 1 type of initiator.\nRepresent NFS access control information.\nSupport <code>Client:::nfs_exp_auth_type_list()</code>.\nSupport <code>Client::nfs_exports()</code>.\nNear-Line SAS, just SATA disk + SAS port.\nPlugin does not support querying system mode.\nPlugin does not support querying disk link type.\nVendor specific RAID type\nVendor specific disk type.\nVendor specific initiator type.\nVendor specific initiator type.\nVendor specific battery type.\nPCI-E, e.g. NVMe.\nRepresent a plugin information\nPool is allocated from other pool.\nRepresent a Pool member.\nRepresent pool membership information.\nSupport <code>Client::pool_member_info()</code>.\nPlugin does not support querying read cache percentage.\nPlugin failed to query read cache percentage.\nRAID 0\nTwo disk mirror.\nStripe of mirrors.\nParity of mirrors.\nDual parity of mirrors.\nByte-level striping with dedicated parity.\nBlock-level striping with dedicated parity.\nBlock-level striping with distributed parity.\nStripe of parities.\nMirror of parities.\nBlock-level striping with two distributed parities. Also …\nStripe of dual parities.\nMirror of dual parities.\nRepresent a RAID type.\nBattery is not fully charged and charging.\nSystem is degraded.\nPool is lost data redundancy due to I/O error or offline …\nBattery is degraded and should be checked or replaced.\nBattery is disconnected from power source and discharging.\nSystem is in error state.\nPool data is not accessible due to some members offline. …\nError make disk not functional.\nBattery is dead and should be replaced.\nIndicate the whole disk is not holding any data or acting …\nPool is growing its size and doing internal jobs. …\nPool is not accessible and performing initializing task. …\nDisk is not functional yet, internal storage system is …\nSystem is trying to discharge and recharge the battery to …\nIn maintenance for bad sector scan, integrity check and …\nSystem is up and healthy.\nThe data of this pool is accessible with not data lose. …\nDisk is up and healthy.\nBattery is healthy and charged.\nVendor specific status.\nVendor specific status. The <code>Pool.status_info</code> property will …\nVendor specific status.\nVendor specific status.\nSystem has potential failure.\nDisk is still functional but will fail soon.\nDisk is reconstructing its data.\nPool is reconstructing the hash data or mirror data. …\nDisk was removed by administrator.\nDisk is configured as spare disk.\nPool is reviving from STOPPED status. Pool data is not …\nDisk is starting up.\nPool is stopping by administrator. Pool data is not …\nDisk is stopped by administrator.\nDisk is shutting down.\nPlugin failed to query system status.\nPlugin failed to query pool status.\nPlugin failed to query out the status of disk.\nPlugin failed to query battery status.\nArray is running integrity check on data of current pool. …\nSAS disk.\nSerial Attached SCSI.\nSATA disk.\nSerial Bus Protocol, used by IEEE 1394.\nSCSI disk.\nSCSI over PCI-Express.\nSCSI over PCI-E.\nSCSI RDMA Protocol.\nSerial Storage Architecture, Old IBM tech.\nSolid State Drive.\nSupport <code>Client::systems()</code> with valid <code>fw_version</code> property.\nSupport <code>Client::systems()</code> with valid <code>mode</code> property.\nSupport <code>Client::systems()</code> with valid <code>read_cache_pct</code> …\nSupport <code>Client::system_read_cache_pct_set()</code>\nRepresent a storage system. Examples:\nRepresent a target port which is the front-end port of …\nSupport <code>Client::target_ports()</code>.\nCreate thin provisioning volume.\nThis pool cannot grow size of its volume.\nThis pool cannot shrink size of its volume.\nPlugin failed to detect volume replication type.\nPlugin failed to query system mode.\nPlugin failed to detect RAID type.\nPlugin failed to query disk type.\nPlugin failed to query disk link type.\nPlugin failed to query initiator type.\nPlugin failed to detect battery type.\nPlugin failed to query cache setting.\nUSB\nPhysical disk cache is determined by the disk vendor via …\nSupport <code>Client::vol_cache_info()</code>.\nSupport <code>Client::vol_child_dep_rm()</code>.\nSupport <code>Client::vol_has_child_dep()</code>.\nSupport <code>Client::vol_phy_disk_cache_set().</code>\nIndicate the <code>Client::vol_phy_disk_cache_set()</code> will change …\nSupport <code>Client::vol_raid_info()</code>.\nSupport <code>Client::vol_read_cache_set()</code>.\nIndicate the <code>Client::vol_read_cache_set()</code> might also …\nSupport <code>Client::vol_write_cache_set()</code> with <code>wcp=Cache::Auto</code>.\nSupport <code>Client::vol_write_cache_set()</code> with …\nSupport <code>Client::vol_write_cache_set()</code> with …\nIndicate the <code>Client::vol_write_cache_set()</code> might also …\nIndicate the <code>Client::vol_write_cache_set()</code> with …\nSupport <code>Client::vols_masked_to_ag()</code>.\nRepresent a storage volume. Also known as LUN(Logical Unit …\nRepresent volume cache information.\nSupport <code>Client::volume_create()</code>.\nFor argument <code>thinp</code> of <code>Client::volume_create()</code>\nSupport <code>Client::volume_delete()</code>.\nSupport <code>Client::volume_disable()</code>.\nSupport <code>Client::volume_enable()</code>.\nSupport <code>Client::vol_ident_led_on()</code> and …\nSupport <code>Client::volume_mask()</code>.\nSupport <code>Client::vol_raid_create_cap_get()</code> and …\nRepresent volume RAID information.\nSupport <code>Client::volume_rep_range()</code>.\nSupport <code>Client::volume_rep_range_blk_size()</code>.\nSupport <code>Client::volume_rep_range()</code> with …\nSupport <code>Client::volume_rep_range()</code> with …\nSupport <code>Client::volume_replicate()</code>.\nSupport <code>Client::volume_replicate()</code> with …\nSupport <code>Client::volume_replicate()</code> with …\nSupport <code>Client::volume_replicate()</code> with …\nSupport <code>Client::volume_replicate()</code> with …\nRepresent a volume replication type.\nSupport <code>Client::volume_resize()</code>.\nSupport <code>Client::volume_crate()</code> with …\nSupport <code>Client::volume_unmask()</code>.\nSupport <code>Client::volumes()</code>.\nFC or FCoE WWPN\nCreate a access group.\nDelete an access group. Only access group with no volume …\nAdd an initiator to the access group.\nDelete an initiator from an access group.\nGets a list of access group on this connection.\nRetrieves the access groups that have access to the …\nGID to map to anonymous\nUID to map to anonymous\nGroup ID for anonymous access.\nUser ID for anonymous access.\nNFS authentication type.\nQuery all available plugins from libStorageMgmt daemon …\nGets a list of batteries on this connection.\nBattery type.\nBlock size.\nBlock size in bytes.\nGet system’s capabilities.\nPlugin description.\nThe count of disks used for assembling the RAID group(s) …\nDisk type.\nGets a list of disks on this connection.\nThe type of elements this pool could create. Valid element …\nWhether volume is online or offline(I/O access disabled by …\nNFS export path.\nFree space in bytes.\nFree space in bytes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a list of file systems on this connection.\nDelete all child dependencies of the specified file system.\nClones an existing file system\nCreate a new file system.\nDelete a file system.\nCreate or modify an NFS export.\nClones a file on a file system.\nChecks whether file system has a child dependency.\nIdentifier of file system.\nResize of file system.\nCreate a file system snapshot.\nDelete a file system snapshot.\nRestore a file system based on specified snapshot.\nGet a list of snapshots of specified file system.\nUnexport specified NFS exports.\nFirmware version.\nIdentifier.\nIdentifier.\nIdentifier.\nIdentifier.\nIdentifier.\nIdentifier.\nIdentifier.\nIdentifier\nIdentifier.\nIdentifier.\nInitiator list.\nInitiator type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck whether specific <code>Capacity</code> is supported or not.\nSet(override) iSCSI CHAP authentication.\nDisk data link type.\nDisk location in storage topology.\nPool members.\nThe minimum I/O size, device preferred I/O size for random …\nSystem mode, currently only supports hardware RAID cards.\nPlugin name.\nHuman friendly name.\nHuman friendly name.\nHuman friendly name.\nHuman friendly name.\nHuman friendly name.\nHuman friendly name.\nHuman friendly name.\nHuman friendly name.\nThe address used by network layer like FC and TCP/IP:\nCreate a connection to plugin. Please refer to …\nCreate a block range.\nGet supported NFS client authentication types.\nGets a list of NFS exports on this connection.\nNumber of blocks.\nCount of block.\nThe optimal I/O size, device preferred I/O size for …\nNFS extra options.\nThe address used by physical layer like FC-0 and MAC:\nPhysical disk cache status.\nThe name of physical port. Administrator could use this …\nGet plugin information.\nIdentifier of owner pool.\nIdentifier of owner pool.\nGet pool member information.\nGets a list of pools on this connection.\nType of port.\nRAID type\nRAID type\nRead cache percentage of the system. Valid values are:\nRead cache setting.\nRead cache status\nHost list with read only access.\nList of hosts with read only access.\nHost list with root access.\nList of hosts with root access.\nDisk rotation speed - revolutions per minute(RPM):\nHost list with read and write access.\nList of hosts with read and write access.\nThe address used by upper layer like FC and iSCSI:\nRetried the usable size of volume in bytes.\nConvert human readable size string into integer size in …\nSystem status stored in bitmap. Valid status value are:\nPool status stored in bitmap. Valid status value are:\nDisk status stored in bitmap. Valid status value are:\nBattery status stored in bitmap. Valid status value are:\nAdditional message for status.\nAdditional message for status.\nThe size of strip on each disk or other storage extent. …\nChanges the read cache percentage for the specified system.\nIdentifier of owner system.\nIdentifier of owner system.\nIdentifier of owner system.\nIdentifier of owner system.\nIdentifier of owner system.\nIdentifier of owner system.\nGets a list of systems on this connection.\nGets a list of target ports on this connection.\nGet connection timeout value.\nSet connection timeout value in milliseconds.\nTotal space in bytes.\nTotal space in bytes.\nPOSIX time(epoch time) on creation.\nThe actions does not supported by this pool. Valid values …\nPlugin version string.\nGet cache information on specified volume.\nDelete all child dependencies of the specified volume.\nCheck whether volume has child dependencies.\nTurn off the identification LED for the specified volume.\nTurn on the identification LED for the specified volume.\nSet volume physical disk cache policy.\nCreate RAIDed volume directly from disks. Only for …\nGet system capability on creating RAIDed volume. For …\nGet volume RAID information.\nSet volume read cache policy.\nSet volume write cache policy.\nQuery volumes that the specified access group has access …\nCreate new volume.\nDelete a volume\nDisable the read and write access to the specified volume.\nSet a Volume to online.\nGrant access to a volume for the specified group, also …\nBlock size for the <code>Client::volume_replicate_range()</code>.\nReplicate a volume.\nReplicates a portion of a volume to a volume.\nResize a volume.\nRevokes access to a volume for the specified group\nGets a list of volumes on this connection.\nSCSI VPD 0x83 NAA type identifier. Udev treat it as …\nSCSI VPD 0x83 NAA type identifier. Udev treat it as …\nWrite cache setting.\nWrite cache status.\nAutomation/Drive Interface Transport Protocol, often used …\nPATA/IDE or SATA.\nDevice self reports failure\nFibre channel\nDevice self reports good\nPossible health status of any disk.\nInternet Small Computer System Interface\nFault LED is off\nFault LED is on\nFault LED is unknown\nIdentification LED is off\nIdentification LED is on\nIdentification LED is unknown\nLED has unknown status\nInformation about specific slot\nOpaque type for interacting with LED slots functionality.\nPossible values of link type.\nNo support\nNon-rotational media disk\nPCI-e, e.g. NVMe\nPossible values for disk RPM.\nRotating disk with specified speed in RPM\nSerial attached SCSI\nSerial Bus Protocol, used by IEEE 1394\nSCSI over PCI-e\nSCSI RDMA Protocol\nSerial Storage Architecture, old IBM tech.\nUnknown\nUnknown\nUnknown\nrotational disk with unknown speed\nDevice self reports warning\nDevice node for block device which may not be present (you …\nTurn the fault LED off for specified disk path.\nTurn the fault LED on for specified disk path.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nQuery the health status of the specified disk path.\nSlot ID of slot (this is not persistent across boots or …\nTurn the identification LED off for specified disk path.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRetrieve current state of LED for specified disk path.\nQuery the current negotiated disk link speed in Mbps\nQuery disk link type.\nCreate a new instance of LED slots\nQuery disk rotation speed.\nQuery serial number of specified disk path\nRetrieve the LED status for the specified slot.\nSet the status of the specified slot, bit sensitive input …\nRetrieve the slots\nQuery scsi VPD 0x83 NAA ID.\nSearches disk by supplied SCSI VPD 0x83 page NAA type ID.")
(function() {var implementors = {};
implementors["lsm"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"lsm/enum.RaidType.html\" title=\"enum lsm::RaidType\">RaidType</a>","synthetic":false,"types":["lsm::data::RaidType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.FromUtf8Error.html\" title=\"struct alloc::string::FromUtf8Error\">FromUtf8Error</a>&gt; for <a class=\"enum\" href=\"lsm/enum.LsmError.html\" title=\"enum lsm::LsmError\">LsmError</a>","synthetic":false,"types":["lsm::error::LsmError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/struct.ParseIntError.html\" title=\"struct core::num::ParseIntError\">ParseIntError</a>&gt; for <a class=\"enum\" href=\"lsm/enum.LsmError.html\" title=\"enum lsm::LsmError\">LsmError</a>","synthetic":false,"types":["lsm::error::LsmError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/str/struct.Utf8Error.html\" title=\"struct core::str::Utf8Error\">Utf8Error</a>&gt; for <a class=\"enum\" href=\"lsm/enum.LsmError.html\" title=\"enum lsm::LsmError\">LsmError</a>","synthetic":false,"types":["lsm::error::LsmError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/serde_json/1.0.48/serde_json/error/struct.Error.html\" title=\"struct serde_json::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"lsm/enum.LsmError.html\" title=\"enum lsm::LsmError\">LsmError</a>","synthetic":false,"types":["lsm::error::LsmError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"lsm/enum.LsmError.html\" title=\"enum lsm::LsmError\">LsmError</a>","synthetic":false,"types":["lsm::error::LsmError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"enum\" href=\"lsm/enum.LsmError.html\" title=\"enum lsm::LsmError\">LsmError</a>","synthetic":false,"types":["lsm::error::LsmError"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()